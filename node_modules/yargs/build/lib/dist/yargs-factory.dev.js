"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.YargsFactory = YargsFactory;
exports.isYargsInstance = isYargsInstance;
exports.YargsInstance = void 0;

var _command = require("./command.js");

var _commonTypes = require("./typings/common-types.js");

var _yerror = require("./yerror.js");

var _usage = require("./usage.js");

var _argsert = require("./argsert.js");

var _completion = require("./completion.js");

var _validation = require("./validation.js");

var _objFilter = require("./utils/obj-filter.js");

var _applyExtends = require("./utils/apply-extends.js");

var _middleware = require("./middleware.js");

var _isPromise = require("./utils/is-promise.js");

var _maybeAsyncResult = require("./utils/maybe-async-result.js");

var _setBlocking = _interopRequireDefault(require("./utils/set-blocking.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var __classPrivateFieldSet = void 0 && (void 0).__classPrivateFieldSet || function (receiver, state, value, kind, f) {
  if (kind === "m") throw new TypeError("Private method is not writable");
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
  return kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;
};

var __classPrivateFieldGet = void 0 && (void 0).__classPrivateFieldGet || function (receiver, state, kind, f) {
  if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
  if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
  return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};

var _YargsInstance_command, _YargsInstance_cwd, _YargsInstance_context, _YargsInstance_completion, _YargsInstance_completionCommand, _YargsInstance_defaultShowHiddenOpt, _YargsInstance_exitError, _YargsInstance_detectLocale, _YargsInstance_emittedWarnings, _YargsInstance_exitProcess, _YargsInstance_frozens, _YargsInstance_globalMiddleware, _YargsInstance_groups, _YargsInstance_hasOutput, _YargsInstance_helpOpt, _YargsInstance_isGlobalContext, _YargsInstance_logger, _YargsInstance_output, _YargsInstance_options, _YargsInstance_parentRequire, _YargsInstance_parserConfig, _YargsInstance_parseFn, _YargsInstance_parseContext, _YargsInstance_pkgs, _YargsInstance_preservedGroups, _YargsInstance_processArgs, _YargsInstance_recommendCommands, _YargsInstance_shim, _YargsInstance_strict, _YargsInstance_strictCommands, _YargsInstance_strictOptions, _YargsInstance_usage, _YargsInstance_versionOpt, _YargsInstance_validation;

function YargsFactory(_shim) {
  return function () {
    var processArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var cwd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _shim.process.cwd();
    var parentRequire = arguments.length > 2 ? arguments[2] : undefined;
    var yargs = new YargsInstance(processArgs, cwd, parentRequire, _shim);
    Object.defineProperty(yargs, 'argv', {
      get: function get() {
        return yargs.parse();
      },
      enumerable: true
    });
    yargs.help();
    yargs.version();
    return yargs;
  };
}

var kCopyDoubleDash = Symbol('copyDoubleDash');
var kCreateLogger = Symbol('copyDoubleDash');
var kDeleteFromParserHintObject = Symbol('deleteFromParserHintObject');
var kEmitWarning = Symbol('emitWarning');
var kFreeze = Symbol('freeze');
var kGetDollarZero = Symbol('getDollarZero');
var kGetParserConfiguration = Symbol('getParserConfiguration');
var kGuessLocale = Symbol('guessLocale');
var kGuessVersion = Symbol('guessVersion');
var kParsePositionalNumbers = Symbol('parsePositionalNumbers');
var kPkgUp = Symbol('pkgUp');
var kPopulateParserHintArray = Symbol('populateParserHintArray');
var kPopulateParserHintSingleValueDictionary = Symbol('populateParserHintSingleValueDictionary');
var kPopulateParserHintArrayDictionary = Symbol('populateParserHintArrayDictionary');
var kPopulateParserHintDictionary = Symbol('populateParserHintDictionary');
var kSanitizeKey = Symbol('sanitizeKey');
var kSetKey = Symbol('setKey');
var kUnfreeze = Symbol('unfreeze');
var kValidateAsync = Symbol('validateAsync');
var kGetCommandInstance = Symbol('getCommandInstance');
var kGetContext = Symbol('getContext');
var kGetHasOutput = Symbol('getHasOutput');
var kGetLoggerInstance = Symbol('getLoggerInstance');
var kGetParseContext = Symbol('getParseContext');
var kGetUsageInstance = Symbol('getUsageInstance');
var kGetValidationInstance = Symbol('getValidationInstance');
var kHasParseCallback = Symbol('hasParseCallback');
var kIsGlobalContext = Symbol('isGlobalContext');
var kPostProcess = Symbol('postProcess');
var kRebase = Symbol('rebase');
var kReset = Symbol('reset');
var kRunYargsParserAndExecuteCommands = Symbol('runYargsParserAndExecuteCommands');
var kRunValidation = Symbol('runValidation');
var kSetHasOutput = Symbol('setHasOutput');
var kTrackManuallySetKeys = Symbol('kTrackManuallySetKeys');

var YargsInstance =
/*#__PURE__*/
function () {
  function YargsInstance() {
    var processArgs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    var cwd = arguments.length > 1 ? arguments[1] : undefined;
    var parentRequire = arguments.length > 2 ? arguments[2] : undefined;
    var shim = arguments.length > 3 ? arguments[3] : undefined;

    _classCallCheck(this, YargsInstance);

    this.customScriptName = false;
    this.parsed = false;

    _YargsInstance_command.set(this, void 0);

    _YargsInstance_cwd.set(this, void 0);

    _YargsInstance_context.set(this, {
      commands: [],
      fullCommands: []
    });

    _YargsInstance_completion.set(this, null);

    _YargsInstance_completionCommand.set(this, null);

    _YargsInstance_defaultShowHiddenOpt.set(this, 'show-hidden');

    _YargsInstance_exitError.set(this, null);

    _YargsInstance_detectLocale.set(this, true);

    _YargsInstance_emittedWarnings.set(this, {});

    _YargsInstance_exitProcess.set(this, true);

    _YargsInstance_frozens.set(this, []);

    _YargsInstance_globalMiddleware.set(this, void 0);

    _YargsInstance_groups.set(this, {});

    _YargsInstance_hasOutput.set(this, false);

    _YargsInstance_helpOpt.set(this, null);

    _YargsInstance_isGlobalContext.set(this, true);

    _YargsInstance_logger.set(this, void 0);

    _YargsInstance_output.set(this, '');

    _YargsInstance_options.set(this, void 0);

    _YargsInstance_parentRequire.set(this, void 0);

    _YargsInstance_parserConfig.set(this, {});

    _YargsInstance_parseFn.set(this, null);

    _YargsInstance_parseContext.set(this, null);

    _YargsInstance_pkgs.set(this, {});

    _YargsInstance_preservedGroups.set(this, {});

    _YargsInstance_processArgs.set(this, void 0);

    _YargsInstance_recommendCommands.set(this, false);

    _YargsInstance_shim.set(this, void 0);

    _YargsInstance_strict.set(this, false);

    _YargsInstance_strictCommands.set(this, false);

    _YargsInstance_strictOptions.set(this, false);

    _YargsInstance_usage.set(this, void 0);

    _YargsInstance_versionOpt.set(this, null);

    _YargsInstance_validation.set(this, void 0);

    __classPrivateFieldSet(this, _YargsInstance_shim, shim, "f");

    __classPrivateFieldSet(this, _YargsInstance_processArgs, processArgs, "f");

    __classPrivateFieldSet(this, _YargsInstance_cwd, cwd, "f");

    __classPrivateFieldSet(this, _YargsInstance_parentRequire, parentRequire, "f");

    __classPrivateFieldSet(this, _YargsInstance_globalMiddleware, new _middleware.GlobalMiddleware(this), "f");

    this.$0 = this[kGetDollarZero]();
    this[kReset]();

    __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, "f"), "f");

    __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, "f"), "f");

    __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, "f"), "f");

    __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, "f"), "f");

    __classPrivateFieldGet(this, _YargsInstance_options, "f").showHiddenOpt = __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, "f");

    __classPrivateFieldSet(this, _YargsInstance_logger, this[kCreateLogger](), "f");
  }

  _createClass(YargsInstance, [{
    key: "addHelpOpt",
    value: function addHelpOpt(opt, msg) {
      var defaultHelpOpt = 'help';
      (0, _argsert.argsert)('[string|boolean] [string]', [opt, msg], arguments.length);

      if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f")) {
        this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f"));

        __classPrivateFieldSet(this, _YargsInstance_helpOpt, null, "f");
      }

      if (opt === false && msg === undefined) return this;

      __classPrivateFieldSet(this, _YargsInstance_helpOpt, typeof opt === 'string' ? opt : defaultHelpOpt, "f");

      this["boolean"](__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f"));
      this.describe(__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f"), msg || __classPrivateFieldGet(this, _YargsInstance_usage, "f").deferY18nLookup('Show help'));
      return this;
    }
  }, {
    key: "help",
    value: function help(opt, msg) {
      return this.addHelpOpt(opt, msg);
    }
  }, {
    key: "addShowHiddenOpt",
    value: function addShowHiddenOpt(opt, msg) {
      (0, _argsert.argsert)('[string|boolean] [string]', [opt, msg], arguments.length);
      if (opt === false && msg === undefined) return this;
      var showHiddenOpt = typeof opt === 'string' ? opt : __classPrivateFieldGet(this, _YargsInstance_defaultShowHiddenOpt, "f");
      this["boolean"](showHiddenOpt);
      this.describe(showHiddenOpt, msg || __classPrivateFieldGet(this, _YargsInstance_usage, "f").deferY18nLookup('Show hidden options'));
      __classPrivateFieldGet(this, _YargsInstance_options, "f").showHiddenOpt = showHiddenOpt;
      return this;
    }
  }, {
    key: "showHidden",
    value: function showHidden(opt, msg) {
      return this.addShowHiddenOpt(opt, msg);
    }
  }, {
    key: "alias",
    value: function alias(key, value) {
      (0, _argsert.argsert)('<object|string|array> [string|array]', [key, value], arguments.length);
      this[kPopulateParserHintArrayDictionary](this.alias.bind(this), 'alias', key, value);
      return this;
    }
  }, {
    key: "array",
    value: function array(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('array', keys);
      this[kTrackManuallySetKeys](keys);
      return this;
    }
  }, {
    key: "boolean",
    value: function boolean(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('boolean', keys);
      this[kTrackManuallySetKeys](keys);
      return this;
    }
  }, {
    key: "check",
    value: function check(f, global) {
      var _this = this;

      (0, _argsert.argsert)('<function> [boolean]', [f, global], arguments.length);
      this.middleware(function (argv, _yargs) {
        return (0, _maybeAsyncResult.maybeAsyncResult)(function () {
          return f(argv, _yargs.getOptions());
        }, function (result) {
          if (!result) {
            __classPrivateFieldGet(_this, _YargsInstance_usage, "f").fail(__classPrivateFieldGet(_this, _YargsInstance_shim, "f").y18n.__('Argument check failed: %s', f.toString()));
          } else if (typeof result === 'string' || result instanceof Error) {
            __classPrivateFieldGet(_this, _YargsInstance_usage, "f").fail(result.toString(), result);
          }

          return argv;
        }, function (err) {
          __classPrivateFieldGet(_this, _YargsInstance_usage, "f").fail(err.message ? err.message : err.toString(), err);

          return argv;
        });
      }, false, global);
      return this;
    }
  }, {
    key: "choices",
    value: function choices(key, value) {
      (0, _argsert.argsert)('<object|string|array> [string|array]', [key, value], arguments.length);
      this[kPopulateParserHintArrayDictionary](this.choices.bind(this), 'choices', key, value);
      return this;
    }
  }, {
    key: "coerce",
    value: function coerce(keys, value) {
      (0, _argsert.argsert)('<object|string|array> [function]', [keys, value], arguments.length);

      if (Array.isArray(keys)) {
        if (!value) {
          throw new _yerror.YError('coerce callback must be provided');
        }

        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var key = _step.value;
            this.coerce(key, value);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"] != null) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return this;
      } else if (_typeof(keys) === 'object') {
        for (var _i = 0, _Object$keys = Object.keys(keys); _i < _Object$keys.length; _i++) {
          var _key = _Object$keys[_i];
          this.coerce(_key, keys[_key]);
        }

        return this;
      }

      if (!value) {
        throw new _yerror.YError('coerce callback must be provided');
      }

      __classPrivateFieldGet(this, _YargsInstance_options, "f").key[keys] = true;

      __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").addCoerceMiddleware(function (argv, yargs) {
        var aliases;
        var shouldCoerce = Object.prototype.hasOwnProperty.call(argv, keys);

        if (!shouldCoerce) {
          return argv;
        }

        return (0, _maybeAsyncResult.maybeAsyncResult)(function () {
          aliases = yargs.getAliases();
          return value(argv[keys]);
        }, function (result) {
          argv[keys] = result;
          var stripAliased = yargs.getInternalMethods().getParserConfiguration()['strip-aliased'];

          if (aliases[keys] && stripAliased !== true) {
            var _iteratorNormalCompletion2 = true;
            var _didIteratorError2 = false;
            var _iteratorError2 = undefined;

            try {
              for (var _iterator2 = aliases[keys][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                var alias = _step2.value;
                argv[alias] = result;
              }
            } catch (err) {
              _didIteratorError2 = true;
              _iteratorError2 = err;
            } finally {
              try {
                if (!_iteratorNormalCompletion2 && _iterator2["return"] != null) {
                  _iterator2["return"]();
                }
              } finally {
                if (_didIteratorError2) {
                  throw _iteratorError2;
                }
              }
            }
          }

          return argv;
        }, function (err) {
          throw new _yerror.YError(err.message);
        });
      }, keys);

      return this;
    }
  }, {
    key: "conflicts",
    value: function conflicts(key1, key2) {
      (0, _argsert.argsert)('<string|object> [string|array]', [key1, key2], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_validation, "f").conflicts(key1, key2);

      return this;
    }
  }, {
    key: "config",
    value: function config() {
      var _this2 = this;

      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'config';
      var msg = arguments.length > 1 ? arguments[1] : undefined;
      var parseFn = arguments.length > 2 ? arguments[2] : undefined;
      (0, _argsert.argsert)('[object|string] [string|function] [function]', [key, msg, parseFn], arguments.length);

      if (_typeof(key) === 'object' && !Array.isArray(key)) {
        key = (0, _applyExtends.applyExtends)(key, __classPrivateFieldGet(this, _YargsInstance_cwd, "f"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        __classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects || []).concat(key);
        return this;
      }

      if (typeof msg === 'function') {
        parseFn = msg;
        msg = undefined;
      }

      this.describe(key, msg || __classPrivateFieldGet(this, _YargsInstance_usage, "f").deferY18nLookup('Path to JSON config file'));
      (Array.isArray(key) ? key : [key]).forEach(function (k) {
        __classPrivateFieldGet(_this2, _YargsInstance_options, "f").config[k] = parseFn || true;
      });
      return this;
    }
  }, {
    key: "completion",
    value: function completion(cmd, desc, fn) {
      (0, _argsert.argsert)('[string] [string|boolean|function] [function]', [cmd, desc, fn], arguments.length);

      if (typeof desc === 'function') {
        fn = desc;
        desc = undefined;
      }

      __classPrivateFieldSet(this, _YargsInstance_completionCommand, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, "f") || 'completion', "f");

      if (!desc && desc !== false) {
        desc = 'generate completion script';
      }

      this.command(__classPrivateFieldGet(this, _YargsInstance_completionCommand, "f"), desc);
      if (fn) __classPrivateFieldGet(this, _YargsInstance_completion, "f").registerFunction(fn);
      return this;
    }
  }, {
    key: "command",
    value: function command(cmd, description, builder, handler, middlewares, deprecated) {
      (0, _argsert.argsert)('<string|array|object> [string|boolean] [function|object] [function] [array] [boolean|string]', [cmd, description, builder, handler, middlewares, deprecated], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_command, "f").addHandler(cmd, description, builder, handler, middlewares, deprecated);

      return this;
    }
  }, {
    key: "commands",
    value: function commands(cmd, description, builder, handler, middlewares, deprecated) {
      return this.command(cmd, description, builder, handler, middlewares, deprecated);
    }
  }, {
    key: "commandDir",
    value: function commandDir(dir, opts) {
      (0, _argsert.argsert)('<string> [object]', [dir, opts], arguments.length);

      var req = __classPrivateFieldGet(this, _YargsInstance_parentRequire, "f") || __classPrivateFieldGet(this, _YargsInstance_shim, "f").require;

      __classPrivateFieldGet(this, _YargsInstance_command, "f").addDirectory(dir, req, __classPrivateFieldGet(this, _YargsInstance_shim, "f").getCallerFile(), opts);

      return this;
    }
  }, {
    key: "count",
    value: function count(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('count', keys);
      this[kTrackManuallySetKeys](keys);
      return this;
    }
  }, {
    key: "default",
    value: function _default(key, value, defaultDescription) {
      (0, _argsert.argsert)('<object|string|array> [*] [string]', [key, value, defaultDescription], arguments.length);

      if (defaultDescription) {
        (0, _commonTypes.assertSingleKey)(key, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        __classPrivateFieldGet(this, _YargsInstance_options, "f").defaultDescription[key] = defaultDescription;
      }

      if (typeof value === 'function') {
        (0, _commonTypes.assertSingleKey)(key, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        if (!__classPrivateFieldGet(this, _YargsInstance_options, "f").defaultDescription[key]) __classPrivateFieldGet(this, _YargsInstance_options, "f").defaultDescription[key] = __classPrivateFieldGet(this, _YargsInstance_usage, "f").functionDescription(value);
        value = value.call();
      }

      this[kPopulateParserHintSingleValueDictionary](this["default"].bind(this), 'default', key, value);
      return this;
    }
  }, {
    key: "defaults",
    value: function defaults(key, value, defaultDescription) {
      return this["default"](key, value, defaultDescription);
    }
  }, {
    key: "demandCommand",
    value: function demandCommand() {
      var min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
      var max = arguments.length > 1 ? arguments[1] : undefined;
      var minMsg = arguments.length > 2 ? arguments[2] : undefined;
      var maxMsg = arguments.length > 3 ? arguments[3] : undefined;
      (0, _argsert.argsert)('[number] [number|string] [string|null|undefined] [string|null|undefined]', [min, max, minMsg, maxMsg], arguments.length);

      if (typeof max !== 'number') {
        minMsg = max;
        max = Infinity;
      }

      this.global('_', false);
      __classPrivateFieldGet(this, _YargsInstance_options, "f").demandedCommands._ = {
        min: min,
        max: max,
        minMsg: minMsg,
        maxMsg: maxMsg
      };
      return this;
    }
  }, {
    key: "demand",
    value: function demand(keys, max, msg) {
      var _this3 = this;

      if (Array.isArray(max)) {
        max.forEach(function (key) {
          (0, _commonTypes.assertNotStrictEqual)(msg, true, __classPrivateFieldGet(_this3, _YargsInstance_shim, "f"));

          _this3.demandOption(key, msg);
        });
        max = Infinity;
      } else if (typeof max !== 'number') {
        msg = max;
        max = Infinity;
      }

      if (typeof keys === 'number') {
        (0, _commonTypes.assertNotStrictEqual)(msg, true, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        this.demandCommand(keys, max, msg, msg);
      } else if (Array.isArray(keys)) {
        keys.forEach(function (key) {
          (0, _commonTypes.assertNotStrictEqual)(msg, true, __classPrivateFieldGet(_this3, _YargsInstance_shim, "f"));

          _this3.demandOption(key, msg);
        });
      } else {
        if (typeof msg === 'string') {
          this.demandOption(keys, msg);
        } else if (msg === true || typeof msg === 'undefined') {
          this.demandOption(keys);
        }
      }

      return this;
    }
  }, {
    key: "demandOption",
    value: function demandOption(keys, msg) {
      (0, _argsert.argsert)('<object|string|array> [string]', [keys, msg], arguments.length);
      this[kPopulateParserHintSingleValueDictionary](this.demandOption.bind(this), 'demandedOptions', keys, msg);
      return this;
    }
  }, {
    key: "deprecateOption",
    value: function deprecateOption(option, message) {
      (0, _argsert.argsert)('<string> [string|boolean]', [option, message], arguments.length);
      __classPrivateFieldGet(this, _YargsInstance_options, "f").deprecatedOptions[option] = message;
      return this;
    }
  }, {
    key: "describe",
    value: function describe(keys, description) {
      (0, _argsert.argsert)('<object|string|array> [string]', [keys, description], arguments.length);
      this[kSetKey](keys, true);

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").describe(keys, description);

      return this;
    }
  }, {
    key: "detectLocale",
    value: function detectLocale(detect) {
      (0, _argsert.argsert)('<boolean>', [detect], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_detectLocale, detect, "f");

      return this;
    }
  }, {
    key: "env",
    value: function env(prefix) {
      (0, _argsert.argsert)('[string|boolean]', [prefix], arguments.length);
      if (prefix === false) delete __classPrivateFieldGet(this, _YargsInstance_options, "f").envPrefix;else __classPrivateFieldGet(this, _YargsInstance_options, "f").envPrefix = prefix || '';
      return this;
    }
  }, {
    key: "epilogue",
    value: function epilogue(msg) {
      (0, _argsert.argsert)('<string>', [msg], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").epilog(msg);

      return this;
    }
  }, {
    key: "epilog",
    value: function epilog(msg) {
      return this.epilogue(msg);
    }
  }, {
    key: "example",
    value: function example(cmd, description) {
      var _this4 = this;

      (0, _argsert.argsert)('<string|array> [string]', [cmd, description], arguments.length);

      if (Array.isArray(cmd)) {
        cmd.forEach(function (exampleParams) {
          return _this4.example.apply(_this4, _toConsumableArray(exampleParams));
        });
      } else {
        __classPrivateFieldGet(this, _YargsInstance_usage, "f").example(cmd, description);
      }

      return this;
    }
  }, {
    key: "exit",
    value: function exit(code, err) {
      __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, "f");

      __classPrivateFieldSet(this, _YargsInstance_exitError, err, "f");

      if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, "f")) __classPrivateFieldGet(this, _YargsInstance_shim, "f").process.exit(code);
    }
  }, {
    key: "exitProcess",
    value: function exitProcess() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      (0, _argsert.argsert)('[boolean]', [enabled], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_exitProcess, enabled, "f");

      return this;
    }
  }, {
    key: "fail",
    value: function fail(f) {
      (0, _argsert.argsert)('<function|boolean>', [f], arguments.length);

      if (typeof f === 'boolean' && f !== false) {
        throw new _yerror.YError("Invalid first argument. Expected function or boolean 'false'");
      }

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").failFn(f);

      return this;
    }
  }, {
    key: "getAliases",
    value: function getAliases() {
      return this.parsed ? this.parsed.aliases : {};
    }
  }, {
    key: "getCompletion",
    value: function getCompletion(args, done) {
      var _this5 = this;

      var _args = arguments;
      return regeneratorRuntime.async(function getCompletion$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              (0, _argsert.argsert)('<array> [function]', [args, done], _args.length);

              if (done) {
                _context.next = 5;
                break;
              }

              return _context.abrupt("return", new Promise(function (resolve, reject) {
                __classPrivateFieldGet(_this5, _YargsInstance_completion, "f").getCompletion(args, function (err, completions) {
                  if (err) reject(err);else resolve(completions);
                });
              }));

            case 5:
              return _context.abrupt("return", __classPrivateFieldGet(this, _YargsInstance_completion, "f").getCompletion(args, done));

            case 6:
            case "end":
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: "getDemandedOptions",
    value: function getDemandedOptions() {
      (0, _argsert.argsert)([], 0);
      return __classPrivateFieldGet(this, _YargsInstance_options, "f").demandedOptions;
    }
  }, {
    key: "getDemandedCommands",
    value: function getDemandedCommands() {
      (0, _argsert.argsert)([], 0);
      return __classPrivateFieldGet(this, _YargsInstance_options, "f").demandedCommands;
    }
  }, {
    key: "getDeprecatedOptions",
    value: function getDeprecatedOptions() {
      (0, _argsert.argsert)([], 0);
      return __classPrivateFieldGet(this, _YargsInstance_options, "f").deprecatedOptions;
    }
  }, {
    key: "getDetectLocale",
    value: function getDetectLocale() {
      return __classPrivateFieldGet(this, _YargsInstance_detectLocale, "f");
    }
  }, {
    key: "getExitProcess",
    value: function getExitProcess() {
      return __classPrivateFieldGet(this, _YargsInstance_exitProcess, "f");
    }
  }, {
    key: "getGroups",
    value: function getGroups() {
      return Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_groups, "f"), __classPrivateFieldGet(this, _YargsInstance_preservedGroups, "f"));
    }
  }, {
    key: "getHelp",
    value: function getHelp() {
      var _this6 = this;

      __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, "f");

      if (!__classPrivateFieldGet(this, _YargsInstance_usage, "f").hasCachedHelpMessage()) {
        if (!this.parsed) {
          var parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, "f"), undefined, undefined, 0, true);

          if ((0, _isPromise.isPromise)(parse)) {
            return parse.then(function () {
              return __classPrivateFieldGet(_this6, _YargsInstance_usage, "f").help();
            });
          }
        }

        var builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, "f").runDefaultBuilderOn(this);

        if ((0, _isPromise.isPromise)(builderResponse)) {
          return builderResponse.then(function () {
            return __classPrivateFieldGet(_this6, _YargsInstance_usage, "f").help();
          });
        }
      }

      return Promise.resolve(__classPrivateFieldGet(this, _YargsInstance_usage, "f").help());
    }
  }, {
    key: "getOptions",
    value: function getOptions() {
      return __classPrivateFieldGet(this, _YargsInstance_options, "f");
    }
  }, {
    key: "getStrict",
    value: function getStrict() {
      return __classPrivateFieldGet(this, _YargsInstance_strict, "f");
    }
  }, {
    key: "getStrictCommands",
    value: function getStrictCommands() {
      return __classPrivateFieldGet(this, _YargsInstance_strictCommands, "f");
    }
  }, {
    key: "getStrictOptions",
    value: function getStrictOptions() {
      return __classPrivateFieldGet(this, _YargsInstance_strictOptions, "f");
    }
  }, {
    key: "global",
    value: function global(globals, _global) {
      var _this7 = this;

      (0, _argsert.argsert)('<string|array> [boolean]', [globals, _global], arguments.length);
      globals = [].concat(globals);

      if (_global !== false) {
        __classPrivateFieldGet(this, _YargsInstance_options, "f").local = __classPrivateFieldGet(this, _YargsInstance_options, "f").local.filter(function (l) {
          return globals.indexOf(l) === -1;
        });
      } else {
        globals.forEach(function (g) {
          if (!__classPrivateFieldGet(_this7, _YargsInstance_options, "f").local.includes(g)) __classPrivateFieldGet(_this7, _YargsInstance_options, "f").local.push(g);
        });
      }

      return this;
    }
  }, {
    key: "group",
    value: function group(opts, groupName) {
      (0, _argsert.argsert)('<string|array> <string>', [opts, groupName], arguments.length);

      var existing = __classPrivateFieldGet(this, _YargsInstance_preservedGroups, "f")[groupName] || __classPrivateFieldGet(this, _YargsInstance_groups, "f")[groupName];

      if (__classPrivateFieldGet(this, _YargsInstance_preservedGroups, "f")[groupName]) {
        delete __classPrivateFieldGet(this, _YargsInstance_preservedGroups, "f")[groupName];
      }

      var seen = {};
      __classPrivateFieldGet(this, _YargsInstance_groups, "f")[groupName] = (existing || []).concat(opts).filter(function (key) {
        if (seen[key]) return false;
        return seen[key] = true;
      });
      return this;
    }
  }, {
    key: "hide",
    value: function hide(key) {
      (0, _argsert.argsert)('<string>', [key], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_options, "f").hiddenOptions.push(key);

      return this;
    }
  }, {
    key: "implies",
    value: function implies(key, value) {
      (0, _argsert.argsert)('<string|object> [number|string|array]', [key, value], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_validation, "f").implies(key, value);

      return this;
    }
  }, {
    key: "locale",
    value: function locale(_locale) {
      (0, _argsert.argsert)('[string]', [_locale], arguments.length);

      if (_locale === undefined) {
        this[kGuessLocale]();
        return __classPrivateFieldGet(this, _YargsInstance_shim, "f").y18n.getLocale();
      }

      __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, "f");

      __classPrivateFieldGet(this, _YargsInstance_shim, "f").y18n.setLocale(_locale);

      return this;
    }
  }, {
    key: "middleware",
    value: function middleware(callback, applyBeforeValidation, global) {
      return __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").addMiddleware(callback, !!applyBeforeValidation, global);
    }
  }, {
    key: "nargs",
    value: function nargs(key, value) {
      (0, _argsert.argsert)('<string|object|array> [number]', [key, value], arguments.length);
      this[kPopulateParserHintSingleValueDictionary](this.nargs.bind(this), 'narg', key, value);
      return this;
    }
  }, {
    key: "normalize",
    value: function normalize(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('normalize', keys);
      return this;
    }
  }, {
    key: "number",
    value: function number(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('number', keys);
      this[kTrackManuallySetKeys](keys);
      return this;
    }
  }, {
    key: "option",
    value: function option(key, opt) {
      var _this8 = this;

      (0, _argsert.argsert)('<string|object> [object]', [key, opt], arguments.length);

      if (_typeof(key) === 'object') {
        Object.keys(key).forEach(function (k) {
          _this8.options(k, key[k]);
        });
      } else {
        if (_typeof(opt) !== 'object') {
          opt = {};
        }

        this[kTrackManuallySetKeys](key);

        if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, "f") && (key === 'version' || (opt === null || opt === void 0 ? void 0 : opt.alias) === 'version')) {
          this[kEmitWarning](['"version" is a reserved word.', 'Please do one of the following:', '- Disable version with `yargs.version(false)` if using "version" as an option', '- Use the built-in `yargs.version` method instead (if applicable)', '- Use a different option key', 'https://yargs.js.org/docs/#api-reference-version'].join('\n'), undefined, 'versionWarning');
        }

        __classPrivateFieldGet(this, _YargsInstance_options, "f").key[key] = true;
        if (opt.alias) this.alias(key, opt.alias);
        var deprecate = opt.deprecate || opt.deprecated;

        if (deprecate) {
          this.deprecateOption(key, deprecate);
        }

        var demand = opt.demand || opt.required || opt.require;

        if (demand) {
          this.demand(key, demand);
        }

        if (opt.demandOption) {
          this.demandOption(key, typeof opt.demandOption === 'string' ? opt.demandOption : undefined);
        }

        if (opt.conflicts) {
          this.conflicts(key, opt.conflicts);
        }

        if ('default' in opt) {
          this["default"](key, opt["default"]);
        }

        if (opt.implies !== undefined) {
          this.implies(key, opt.implies);
        }

        if (opt.nargs !== undefined) {
          this.nargs(key, opt.nargs);
        }

        if (opt.config) {
          this.config(key, opt.configParser);
        }

        if (opt.normalize) {
          this.normalize(key);
        }

        if (opt.choices) {
          this.choices(key, opt.choices);
        }

        if (opt.coerce) {
          this.coerce(key, opt.coerce);
        }

        if (opt.group) {
          this.group(key, opt.group);
        }

        if (opt["boolean"] || opt.type === 'boolean') {
          this["boolean"](key);
          if (opt.alias) this["boolean"](opt.alias);
        }

        if (opt.array || opt.type === 'array') {
          this.array(key);
          if (opt.alias) this.array(opt.alias);
        }

        if (opt.number || opt.type === 'number') {
          this.number(key);
          if (opt.alias) this.number(opt.alias);
        }

        if (opt.string || opt.type === 'string') {
          this.string(key);
          if (opt.alias) this.string(opt.alias);
        }

        if (opt.count || opt.type === 'count') {
          this.count(key);
        }

        if (typeof opt.global === 'boolean') {
          this.global(key, opt.global);
        }

        if (opt.defaultDescription) {
          __classPrivateFieldGet(this, _YargsInstance_options, "f").defaultDescription[key] = opt.defaultDescription;
        }

        if (opt.skipValidation) {
          this.skipValidation(key);
        }

        var desc = opt.describe || opt.description || opt.desc;

        var descriptions = __classPrivateFieldGet(this, _YargsInstance_usage, "f").getDescriptions();

        if (!Object.prototype.hasOwnProperty.call(descriptions, key) || typeof desc === 'string') {
          this.describe(key, desc);
        }

        if (opt.hidden) {
          this.hide(key);
        }

        if (opt.requiresArg) {
          this.requiresArg(key);
        }
      }

      return this;
    }
  }, {
    key: "options",
    value: function options(key, opt) {
      return this.option(key, opt);
    }
  }, {
    key: "parse",
    value: function parse(args, shortCircuit, _parseFn) {
      var _this9 = this;

      (0, _argsert.argsert)('[string|array] [function|boolean|object] [function]', [args, shortCircuit, _parseFn], arguments.length);
      this[kFreeze]();

      if (typeof args === 'undefined') {
        args = __classPrivateFieldGet(this, _YargsInstance_processArgs, "f");
      }

      if (_typeof(shortCircuit) === 'object') {
        __classPrivateFieldSet(this, _YargsInstance_parseContext, shortCircuit, "f");

        shortCircuit = _parseFn;
      }

      if (typeof shortCircuit === 'function') {
        __classPrivateFieldSet(this, _YargsInstance_parseFn, shortCircuit, "f");

        shortCircuit = false;
      }

      if (!shortCircuit) __classPrivateFieldSet(this, _YargsInstance_processArgs, args, "f");
      if (__classPrivateFieldGet(this, _YargsInstance_parseFn, "f")) __classPrivateFieldSet(this, _YargsInstance_exitProcess, false, "f");
      var parsed = this[kRunYargsParserAndExecuteCommands](args, !!shortCircuit);
      var tmpParsed = this.parsed;

      __classPrivateFieldGet(this, _YargsInstance_completion, "f").setParsed(this.parsed);

      if ((0, _isPromise.isPromise)(parsed)) {
        return parsed.then(function (argv) {
          if (__classPrivateFieldGet(_this9, _YargsInstance_parseFn, "f")) __classPrivateFieldGet(_this9, _YargsInstance_parseFn, "f").call(_this9, __classPrivateFieldGet(_this9, _YargsInstance_exitError, "f"), argv, __classPrivateFieldGet(_this9, _YargsInstance_output, "f"));
          return argv;
        })["catch"](function (err) {
          if (__classPrivateFieldGet(_this9, _YargsInstance_parseFn, "f")) {
            __classPrivateFieldGet(_this9, _YargsInstance_parseFn, "f")(err, _this9.parsed.argv, __classPrivateFieldGet(_this9, _YargsInstance_output, "f"));
          }

          throw err;
        })["finally"](function () {
          _this9[kUnfreeze]();

          _this9.parsed = tmpParsed;
        });
      } else {
        if (__classPrivateFieldGet(this, _YargsInstance_parseFn, "f")) __classPrivateFieldGet(this, _YargsInstance_parseFn, "f").call(this, __classPrivateFieldGet(this, _YargsInstance_exitError, "f"), parsed, __classPrivateFieldGet(this, _YargsInstance_output, "f"));
        this[kUnfreeze]();
        this.parsed = tmpParsed;
      }

      return parsed;
    }
  }, {
    key: "parseAsync",
    value: function parseAsync(args, shortCircuit, _parseFn) {
      var maybePromise = this.parse(args, shortCircuit, _parseFn);
      return !(0, _isPromise.isPromise)(maybePromise) ? Promise.resolve(maybePromise) : maybePromise;
    }
  }, {
    key: "parseSync",
    value: function parseSync(args, shortCircuit, _parseFn) {
      var maybePromise = this.parse(args, shortCircuit, _parseFn);

      if ((0, _isPromise.isPromise)(maybePromise)) {
        throw new _yerror.YError('.parseSync() must not be used with asynchronous builders, handlers, or middleware');
      }

      return maybePromise;
    }
  }, {
    key: "parserConfiguration",
    value: function parserConfiguration(config) {
      (0, _argsert.argsert)('<object>', [config], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_parserConfig, config, "f");

      return this;
    }
  }, {
    key: "pkgConf",
    value: function pkgConf(key, rootPath) {
      (0, _argsert.argsert)('<string> [string]', [key, rootPath], arguments.length);
      var conf = null;
      var obj = this[kPkgUp](rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, "f"));

      if (obj[key] && _typeof(obj[key]) === 'object') {
        conf = (0, _applyExtends.applyExtends)(obj[key], rootPath || __classPrivateFieldGet(this, _YargsInstance_cwd, "f"), this[kGetParserConfiguration]()['deep-merge-config'] || false, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        __classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects = (__classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects || []).concat(conf);
      }

      return this;
    }
  }, {
    key: "positional",
    value: function positional(key, opts) {
      (0, _argsert.argsert)('<string> <object>', [key, opts], arguments.length);
      var supportedOpts = ['default', 'defaultDescription', 'implies', 'normalize', 'choices', 'conflicts', 'coerce', 'type', 'describe', 'desc', 'description', 'alias'];
      opts = (0, _objFilter.objFilter)(opts, function (k, v) {
        if (k === 'type' && !['string', 'number', 'boolean'].includes(v)) return false;
        return supportedOpts.includes(k);
      });

      var fullCommand = __classPrivateFieldGet(this, _YargsInstance_context, "f").fullCommands[__classPrivateFieldGet(this, _YargsInstance_context, "f").fullCommands.length - 1];

      var parseOptions = fullCommand ? __classPrivateFieldGet(this, _YargsInstance_command, "f").cmdToParseOptions(fullCommand) : {
        array: [],
        alias: {},
        "default": {},
        demand: {}
      };
      (0, _commonTypes.objectKeys)(parseOptions).forEach(function (pk) {
        var parseOption = parseOptions[pk];

        if (Array.isArray(parseOption)) {
          if (parseOption.indexOf(key) !== -1) opts[pk] = true;
        } else {
          if (parseOption[key] && !(pk in opts)) opts[pk] = parseOption[key];
        }
      });
      this.group(key, __classPrivateFieldGet(this, _YargsInstance_usage, "f").getPositionalGroupName());
      return this.option(key, opts);
    }
  }, {
    key: "recommendCommands",
    value: function recommendCommands() {
      var recommend = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      (0, _argsert.argsert)('[boolean]', [recommend], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_recommendCommands, recommend, "f");

      return this;
    }
  }, {
    key: "required",
    value: function required(keys, max, msg) {
      return this.demand(keys, max, msg);
    }
  }, {
    key: "require",
    value: function require(keys, max, msg) {
      return this.demand(keys, max, msg);
    }
  }, {
    key: "requiresArg",
    value: function requiresArg(keys) {
      (0, _argsert.argsert)('<array|string|object> [number]', [keys], arguments.length);

      if (typeof keys === 'string' && __classPrivateFieldGet(this, _YargsInstance_options, "f").narg[keys]) {
        return this;
      } else {
        this[kPopulateParserHintSingleValueDictionary](this.requiresArg.bind(this), 'narg', keys, NaN);
      }

      return this;
    }
  }, {
    key: "showCompletionScript",
    value: function showCompletionScript($0, cmd) {
      (0, _argsert.argsert)('[string] [string]', [$0, cmd], arguments.length);
      $0 = $0 || this.$0;

      __classPrivateFieldGet(this, _YargsInstance_logger, "f").log(__classPrivateFieldGet(this, _YargsInstance_completion, "f").generateCompletionScript($0, cmd || __classPrivateFieldGet(this, _YargsInstance_completionCommand, "f") || 'completion'));

      return this;
    }
  }, {
    key: "showHelp",
    value: function showHelp(level) {
      var _this10 = this;

      (0, _argsert.argsert)('[string|function]', [level], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, "f");

      if (!__classPrivateFieldGet(this, _YargsInstance_usage, "f").hasCachedHelpMessage()) {
        if (!this.parsed) {
          var parse = this[kRunYargsParserAndExecuteCommands](__classPrivateFieldGet(this, _YargsInstance_processArgs, "f"), undefined, undefined, 0, true);

          if ((0, _isPromise.isPromise)(parse)) {
            parse.then(function () {
              __classPrivateFieldGet(_this10, _YargsInstance_usage, "f").showHelp(level);
            });
            return this;
          }
        }

        var builderResponse = __classPrivateFieldGet(this, _YargsInstance_command, "f").runDefaultBuilderOn(this);

        if ((0, _isPromise.isPromise)(builderResponse)) {
          builderResponse.then(function () {
            __classPrivateFieldGet(_this10, _YargsInstance_usage, "f").showHelp(level);
          });
          return this;
        }
      }

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").showHelp(level);

      return this;
    }
  }, {
    key: "scriptName",
    value: function scriptName(_scriptName) {
      this.customScriptName = true;
      this.$0 = _scriptName;
      return this;
    }
  }, {
    key: "showHelpOnFail",
    value: function showHelpOnFail(enabled, message) {
      (0, _argsert.argsert)('[boolean|string] [string]', [enabled, message], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").showHelpOnFail(enabled, message);

      return this;
    }
  }, {
    key: "showVersion",
    value: function showVersion(level) {
      (0, _argsert.argsert)('[string|function]', [level], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").showVersion(level);

      return this;
    }
  }, {
    key: "skipValidation",
    value: function skipValidation(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('skipValidation', keys);
      return this;
    }
  }, {
    key: "strict",
    value: function strict(enabled) {
      (0, _argsert.argsert)('[boolean]', [enabled], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_strict, enabled !== false, "f");

      return this;
    }
  }, {
    key: "strictCommands",
    value: function strictCommands(enabled) {
      (0, _argsert.argsert)('[boolean]', [enabled], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_strictCommands, enabled !== false, "f");

      return this;
    }
  }, {
    key: "strictOptions",
    value: function strictOptions(enabled) {
      (0, _argsert.argsert)('[boolean]', [enabled], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_strictOptions, enabled !== false, "f");

      return this;
    }
  }, {
    key: "string",
    value: function string(keys) {
      (0, _argsert.argsert)('<array|string>', [keys], arguments.length);
      this[kPopulateParserHintArray]('string', keys);
      this[kTrackManuallySetKeys](keys);
      return this;
    }
  }, {
    key: "terminalWidth",
    value: function terminalWidth() {
      (0, _argsert.argsert)([], 0);
      return __classPrivateFieldGet(this, _YargsInstance_shim, "f").process.stdColumns;
    }
  }, {
    key: "updateLocale",
    value: function updateLocale(obj) {
      return this.updateStrings(obj);
    }
  }, {
    key: "updateStrings",
    value: function updateStrings(obj) {
      (0, _argsert.argsert)('<object>', [obj], arguments.length);

      __classPrivateFieldSet(this, _YargsInstance_detectLocale, false, "f");

      __classPrivateFieldGet(this, _YargsInstance_shim, "f").y18n.updateLocale(obj);

      return this;
    }
  }, {
    key: "usage",
    value: function usage(msg, description, builder, handler) {
      (0, _argsert.argsert)('<string|null|undefined> [string|boolean] [function|object] [function]', [msg, description, builder, handler], arguments.length);

      if (description !== undefined) {
        (0, _commonTypes.assertNotStrictEqual)(msg, null, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));

        if ((msg || '').match(/^\$0( |$)/)) {
          return this.command(msg, description, builder, handler);
        } else {
          throw new _yerror.YError('.usage() description must start with $0 if being used as alias for .command()');
        }
      } else {
        __classPrivateFieldGet(this, _YargsInstance_usage, "f").usage(msg);

        return this;
      }
    }
  }, {
    key: "version",
    value: function version(opt, msg, ver) {
      var defaultVersionOpt = 'version';
      (0, _argsert.argsert)('[boolean|string] [string] [string]', [opt, msg, ver], arguments.length);

      if (__classPrivateFieldGet(this, _YargsInstance_versionOpt, "f")) {
        this[kDeleteFromParserHintObject](__classPrivateFieldGet(this, _YargsInstance_versionOpt, "f"));

        __classPrivateFieldGet(this, _YargsInstance_usage, "f").version(undefined);

        __classPrivateFieldSet(this, _YargsInstance_versionOpt, null, "f");
      }

      if (arguments.length === 0) {
        ver = this[kGuessVersion]();
        opt = defaultVersionOpt;
      } else if (arguments.length === 1) {
        if (opt === false) {
          return this;
        }

        ver = opt;
        opt = defaultVersionOpt;
      } else if (arguments.length === 2) {
        ver = msg;
        msg = undefined;
      }

      __classPrivateFieldSet(this, _YargsInstance_versionOpt, typeof opt === 'string' ? opt : defaultVersionOpt, "f");

      msg = msg || __classPrivateFieldGet(this, _YargsInstance_usage, "f").deferY18nLookup('Show version number');

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").version(ver || undefined);

      this["boolean"](__classPrivateFieldGet(this, _YargsInstance_versionOpt, "f"));
      this.describe(__classPrivateFieldGet(this, _YargsInstance_versionOpt, "f"), msg);
      return this;
    }
  }, {
    key: "wrap",
    value: function wrap(cols) {
      (0, _argsert.argsert)('<number|null|undefined>', [cols], arguments.length);

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").wrap(cols);

      return this;
    }
  }, {
    key: (_YargsInstance_command = new WeakMap(), _YargsInstance_cwd = new WeakMap(), _YargsInstance_context = new WeakMap(), _YargsInstance_completion = new WeakMap(), _YargsInstance_completionCommand = new WeakMap(), _YargsInstance_defaultShowHiddenOpt = new WeakMap(), _YargsInstance_exitError = new WeakMap(), _YargsInstance_detectLocale = new WeakMap(), _YargsInstance_emittedWarnings = new WeakMap(), _YargsInstance_exitProcess = new WeakMap(), _YargsInstance_frozens = new WeakMap(), _YargsInstance_globalMiddleware = new WeakMap(), _YargsInstance_groups = new WeakMap(), _YargsInstance_hasOutput = new WeakMap(), _YargsInstance_helpOpt = new WeakMap(), _YargsInstance_isGlobalContext = new WeakMap(), _YargsInstance_logger = new WeakMap(), _YargsInstance_output = new WeakMap(), _YargsInstance_options = new WeakMap(), _YargsInstance_parentRequire = new WeakMap(), _YargsInstance_parserConfig = new WeakMap(), _YargsInstance_parseFn = new WeakMap(), _YargsInstance_parseContext = new WeakMap(), _YargsInstance_pkgs = new WeakMap(), _YargsInstance_preservedGroups = new WeakMap(), _YargsInstance_processArgs = new WeakMap(), _YargsInstance_recommendCommands = new WeakMap(), _YargsInstance_shim = new WeakMap(), _YargsInstance_strict = new WeakMap(), _YargsInstance_strictCommands = new WeakMap(), _YargsInstance_strictOptions = new WeakMap(), _YargsInstance_usage = new WeakMap(), _YargsInstance_versionOpt = new WeakMap(), _YargsInstance_validation = new WeakMap(), kCopyDoubleDash),
    value: function value(argv) {
      if (!argv._ || !argv['--']) return argv;

      argv._.push.apply(argv._, argv['--']);

      try {
        delete argv['--'];
      } catch (_err) {}

      return argv;
    }
  }, {
    key: kCreateLogger,
    value: function value() {
      var _this11 = this;

      return {
        log: function log() {
          var _console;

          for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
            args[_key2] = arguments[_key2];
          }

          if (!_this11[kHasParseCallback]()) (_console = console).log.apply(_console, args);

          __classPrivateFieldSet(_this11, _YargsInstance_hasOutput, true, "f");

          if (__classPrivateFieldGet(_this11, _YargsInstance_output, "f").length) __classPrivateFieldSet(_this11, _YargsInstance_output, __classPrivateFieldGet(_this11, _YargsInstance_output, "f") + '\n', "f");

          __classPrivateFieldSet(_this11, _YargsInstance_output, __classPrivateFieldGet(_this11, _YargsInstance_output, "f") + args.join(' '), "f");
        },
        error: function error() {
          var _console2;

          for (var _len2 = arguments.length, args = new Array(_len2), _key3 = 0; _key3 < _len2; _key3++) {
            args[_key3] = arguments[_key3];
          }

          if (!_this11[kHasParseCallback]()) (_console2 = console).error.apply(_console2, args);

          __classPrivateFieldSet(_this11, _YargsInstance_hasOutput, true, "f");

          if (__classPrivateFieldGet(_this11, _YargsInstance_output, "f").length) __classPrivateFieldSet(_this11, _YargsInstance_output, __classPrivateFieldGet(_this11, _YargsInstance_output, "f") + '\n', "f");

          __classPrivateFieldSet(_this11, _YargsInstance_output, __classPrivateFieldGet(_this11, _YargsInstance_output, "f") + args.join(' '), "f");
        }
      };
    }
  }, {
    key: kDeleteFromParserHintObject,
    value: function value(optionKey) {
      var _this12 = this;

      (0, _commonTypes.objectKeys)(__classPrivateFieldGet(this, _YargsInstance_options, "f")).forEach(function (hintKey) {
        if (function (key) {
          return key === 'configObjects';
        }(hintKey)) return;

        var hint = __classPrivateFieldGet(_this12, _YargsInstance_options, "f")[hintKey];

        if (Array.isArray(hint)) {
          if (hint.includes(optionKey)) hint.splice(hint.indexOf(optionKey), 1);
        } else if (_typeof(hint) === 'object') {
          delete hint[optionKey];
        }
      });
      delete __classPrivateFieldGet(this, _YargsInstance_usage, "f").getDescriptions()[optionKey];
    }
  }, {
    key: kEmitWarning,
    value: function value(warning, type, deduplicationId) {
      if (!__classPrivateFieldGet(this, _YargsInstance_emittedWarnings, "f")[deduplicationId]) {
        __classPrivateFieldGet(this, _YargsInstance_shim, "f").process.emitWarning(warning, type);

        __classPrivateFieldGet(this, _YargsInstance_emittedWarnings, "f")[deduplicationId] = true;
      }
    }
  }, {
    key: kFreeze,
    value: function value() {
      __classPrivateFieldGet(this, _YargsInstance_frozens, "f").push({
        options: __classPrivateFieldGet(this, _YargsInstance_options, "f"),
        configObjects: __classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects.slice(0),
        exitProcess: __classPrivateFieldGet(this, _YargsInstance_exitProcess, "f"),
        groups: __classPrivateFieldGet(this, _YargsInstance_groups, "f"),
        strict: __classPrivateFieldGet(this, _YargsInstance_strict, "f"),
        strictCommands: __classPrivateFieldGet(this, _YargsInstance_strictCommands, "f"),
        strictOptions: __classPrivateFieldGet(this, _YargsInstance_strictOptions, "f"),
        completionCommand: __classPrivateFieldGet(this, _YargsInstance_completionCommand, "f"),
        output: __classPrivateFieldGet(this, _YargsInstance_output, "f"),
        exitError: __classPrivateFieldGet(this, _YargsInstance_exitError, "f"),
        hasOutput: __classPrivateFieldGet(this, _YargsInstance_hasOutput, "f"),
        parsed: this.parsed,
        parseFn: __classPrivateFieldGet(this, _YargsInstance_parseFn, "f"),
        parseContext: __classPrivateFieldGet(this, _YargsInstance_parseContext, "f")
      });

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").freeze();

      __classPrivateFieldGet(this, _YargsInstance_validation, "f").freeze();

      __classPrivateFieldGet(this, _YargsInstance_command, "f").freeze();

      __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").freeze();
    }
  }, {
    key: kGetDollarZero,
    value: function value() {
      var _this13 = this;

      var $0 = '';
      var default$0;

      if (/\b(node|iojs|electron)(\.exe)?$/.test(__classPrivateFieldGet(this, _YargsInstance_shim, "f").process.argv()[0])) {
        default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, "f").process.argv().slice(1, 2);
      } else {
        default$0 = __classPrivateFieldGet(this, _YargsInstance_shim, "f").process.argv().slice(0, 1);
      }

      $0 = default$0.map(function (x) {
        var b = _this13[kRebase](__classPrivateFieldGet(_this13, _YargsInstance_cwd, "f"), x);

        return x.match(/^(\/|([a-zA-Z]:)?\\)/) && b.length < x.length ? b : x;
      }).join(' ').trim();

      if (__classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('_') && __classPrivateFieldGet(this, _YargsInstance_shim, "f").getProcessArgvBin() === __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('_')) {
        $0 = __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('_').replace("".concat(__classPrivateFieldGet(this, _YargsInstance_shim, "f").path.dirname(__classPrivateFieldGet(this, _YargsInstance_shim, "f").process.execPath()), "/"), '');
      }

      return $0;
    }
  }, {
    key: kGetParserConfiguration,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_parserConfig, "f");
    }
  }, {
    key: kGuessLocale,
    value: function value() {
      if (!__classPrivateFieldGet(this, _YargsInstance_detectLocale, "f")) return;
      var locale = __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('LC_ALL') || __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('LC_MESSAGES') || __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('LANG') || __classPrivateFieldGet(this, _YargsInstance_shim, "f").getEnv('LANGUAGE') || 'en_US';
      this.locale(locale.replace(/[.:].*/, ''));
    }
  }, {
    key: kGuessVersion,
    value: function value() {
      var obj = this[kPkgUp]();
      return obj.version || 'unknown';
    }
  }, {
    key: kParsePositionalNumbers,
    value: function value(argv) {
      var args = argv['--'] ? argv['--'] : argv._;

      for (var i = 0, arg; (arg = args[i]) !== undefined; i++) {
        if (__classPrivateFieldGet(this, _YargsInstance_shim, "f").Parser.looksLikeNumber(arg) && Number.isSafeInteger(Math.floor(parseFloat("".concat(arg))))) {
          args[i] = Number(arg);
        }
      }

      return argv;
    }
  }, {
    key: kPkgUp,
    value: function value(rootPath) {
      var npath = rootPath || '*';
      if (__classPrivateFieldGet(this, _YargsInstance_pkgs, "f")[npath]) return __classPrivateFieldGet(this, _YargsInstance_pkgs, "f")[npath];
      var obj = {};

      try {
        var startDir = rootPath || __classPrivateFieldGet(this, _YargsInstance_shim, "f").mainFilename;

        if (!rootPath && __classPrivateFieldGet(this, _YargsInstance_shim, "f").path.extname(startDir)) {
          startDir = __classPrivateFieldGet(this, _YargsInstance_shim, "f").path.dirname(startDir);
        }

        var pkgJsonPath = __classPrivateFieldGet(this, _YargsInstance_shim, "f").findUp(startDir, function (dir, names) {
          if (names.includes('package.json')) {
            return 'package.json';
          } else {
            return undefined;
          }
        });

        (0, _commonTypes.assertNotStrictEqual)(pkgJsonPath, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
        obj = JSON.parse(__classPrivateFieldGet(this, _YargsInstance_shim, "f").readFileSync(pkgJsonPath, 'utf8'));
      } catch (_noop) {}

      __classPrivateFieldGet(this, _YargsInstance_pkgs, "f")[npath] = obj || {};
      return __classPrivateFieldGet(this, _YargsInstance_pkgs, "f")[npath];
    }
  }, {
    key: kPopulateParserHintArray,
    value: function value(type, keys) {
      var _this14 = this;

      keys = [].concat(keys);
      keys.forEach(function (key) {
        key = _this14[kSanitizeKey](key);

        __classPrivateFieldGet(_this14, _YargsInstance_options, "f")[type].push(key);
      });
    }
  }, {
    key: kPopulateParserHintSingleValueDictionary,
    value: function value(builder, type, key, _value) {
      var _this15 = this;

      this[kPopulateParserHintDictionary](builder, type, key, _value, function (type, key, value) {
        __classPrivateFieldGet(_this15, _YargsInstance_options, "f")[type][key] = value;
      });
    }
  }, {
    key: kPopulateParserHintArrayDictionary,
    value: function value(builder, type, key, _value2) {
      var _this16 = this;

      this[kPopulateParserHintDictionary](builder, type, key, _value2, function (type, key, value) {
        __classPrivateFieldGet(_this16, _YargsInstance_options, "f")[type][key] = (__classPrivateFieldGet(_this16, _YargsInstance_options, "f")[type][key] || []).concat(value);
      });
    }
  }, {
    key: kPopulateParserHintDictionary,
    value: function value(builder, type, key, _value3, singleKeyHandler) {
      if (Array.isArray(key)) {
        key.forEach(function (k) {
          builder(k, _value3);
        });
      } else if (function (key) {
        return _typeof(key) === 'object';
      }(key)) {
        var _iteratorNormalCompletion3 = true;
        var _didIteratorError3 = false;
        var _iteratorError3 = undefined;

        try {
          for (var _iterator3 = (0, _commonTypes.objectKeys)(key)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
            var k = _step3.value;
            builder(k, key[k]);
          }
        } catch (err) {
          _didIteratorError3 = true;
          _iteratorError3 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion3 && _iterator3["return"] != null) {
              _iterator3["return"]();
            }
          } finally {
            if (_didIteratorError3) {
              throw _iteratorError3;
            }
          }
        }
      } else {
        singleKeyHandler(type, this[kSanitizeKey](key), _value3);
      }
    }
  }, {
    key: kSanitizeKey,
    value: function value(key) {
      if (key === '__proto__') return '___proto___';
      return key;
    }
  }, {
    key: kSetKey,
    value: function value(key, set) {
      this[kPopulateParserHintSingleValueDictionary](this[kSetKey].bind(this), 'key', key, set);
      return this;
    }
  }, {
    key: kUnfreeze,
    value: function value() {
      var _frozen;

      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;

      var frozen = __classPrivateFieldGet(this, _YargsInstance_frozens, "f").pop();

      (0, _commonTypes.assertNotStrictEqual)(frozen, undefined, __classPrivateFieldGet(this, _YargsInstance_shim, "f"));
      var configObjects;
      _a = this, _b = this, _c = this, _d = this, _e = this, _f = this, _g = this, _h = this, _j = this, _k = this, _l = this, _m = this, (_frozen = frozen, {
        set value(_o) {
          __classPrivateFieldSet(_a, _YargsInstance_options, _o, "f");
        }

      }.value = _frozen.options, configObjects = _frozen.configObjects, {
        set value(_o) {
          __classPrivateFieldSet(_b, _YargsInstance_exitProcess, _o, "f");
        }

      }.value = _frozen.exitProcess, {
        set value(_o) {
          __classPrivateFieldSet(_c, _YargsInstance_groups, _o, "f");
        }

      }.value = _frozen.groups, {
        set value(_o) {
          __classPrivateFieldSet(_d, _YargsInstance_output, _o, "f");
        }

      }.value = _frozen.output, {
        set value(_o) {
          __classPrivateFieldSet(_e, _YargsInstance_exitError, _o, "f");
        }

      }.value = _frozen.exitError, {
        set value(_o) {
          __classPrivateFieldSet(_f, _YargsInstance_hasOutput, _o, "f");
        }

      }.value = _frozen.hasOutput, this.parsed = _frozen.parsed, {
        set value(_o) {
          __classPrivateFieldSet(_g, _YargsInstance_strict, _o, "f");
        }

      }.value = _frozen.strict, {
        set value(_o) {
          __classPrivateFieldSet(_h, _YargsInstance_strictCommands, _o, "f");
        }

      }.value = _frozen.strictCommands, {
        set value(_o) {
          __classPrivateFieldSet(_j, _YargsInstance_strictOptions, _o, "f");
        }

      }.value = _frozen.strictOptions, {
        set value(_o) {
          __classPrivateFieldSet(_k, _YargsInstance_completionCommand, _o, "f");
        }

      }.value = _frozen.completionCommand, {
        set value(_o) {
          __classPrivateFieldSet(_l, _YargsInstance_parseFn, _o, "f");
        }

      }.value = _frozen.parseFn, {
        set value(_o) {
          __classPrivateFieldSet(_m, _YargsInstance_parseContext, _o, "f");
        }

      }.value = _frozen.parseContext, _frozen);
      __classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects = configObjects;

      __classPrivateFieldGet(this, _YargsInstance_usage, "f").unfreeze();

      __classPrivateFieldGet(this, _YargsInstance_validation, "f").unfreeze();

      __classPrivateFieldGet(this, _YargsInstance_command, "f").unfreeze();

      __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").unfreeze();
    }
  }, {
    key: kValidateAsync,
    value: function value(validation, argv) {
      return (0, _maybeAsyncResult.maybeAsyncResult)(argv, function (result) {
        validation(result);
        return result;
      });
    }
  }, {
    key: "getInternalMethods",
    value: function getInternalMethods() {
      return {
        getCommandInstance: this[kGetCommandInstance].bind(this),
        getContext: this[kGetContext].bind(this),
        getHasOutput: this[kGetHasOutput].bind(this),
        getLoggerInstance: this[kGetLoggerInstance].bind(this),
        getParseContext: this[kGetParseContext].bind(this),
        getParserConfiguration: this[kGetParserConfiguration].bind(this),
        getUsageInstance: this[kGetUsageInstance].bind(this),
        getValidationInstance: this[kGetValidationInstance].bind(this),
        hasParseCallback: this[kHasParseCallback].bind(this),
        isGlobalContext: this[kIsGlobalContext].bind(this),
        postProcess: this[kPostProcess].bind(this),
        reset: this[kReset].bind(this),
        runValidation: this[kRunValidation].bind(this),
        runYargsParserAndExecuteCommands: this[kRunYargsParserAndExecuteCommands].bind(this),
        setHasOutput: this[kSetHasOutput].bind(this)
      };
    }
  }, {
    key: kGetCommandInstance,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_command, "f");
    }
  }, {
    key: kGetContext,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_context, "f");
    }
  }, {
    key: kGetHasOutput,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_hasOutput, "f");
    }
  }, {
    key: kGetLoggerInstance,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_logger, "f");
    }
  }, {
    key: kGetParseContext,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_parseContext, "f") || {};
    }
  }, {
    key: kGetUsageInstance,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_usage, "f");
    }
  }, {
    key: kGetValidationInstance,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_validation, "f");
    }
  }, {
    key: kHasParseCallback,
    value: function value() {
      return !!__classPrivateFieldGet(this, _YargsInstance_parseFn, "f");
    }
  }, {
    key: kIsGlobalContext,
    value: function value() {
      return __classPrivateFieldGet(this, _YargsInstance_isGlobalContext, "f");
    }
  }, {
    key: kPostProcess,
    value: function value(argv, populateDoubleDash, calledFromCommand, runGlobalMiddleware) {
      if (calledFromCommand) return argv;
      if ((0, _isPromise.isPromise)(argv)) return argv;

      if (!populateDoubleDash) {
        argv = this[kCopyDoubleDash](argv);
      }

      var parsePositionalNumbers = this[kGetParserConfiguration]()['parse-positional-numbers'] || this[kGetParserConfiguration]()['parse-positional-numbers'] === undefined;

      if (parsePositionalNumbers) {
        argv = this[kParsePositionalNumbers](argv);
      }

      if (runGlobalMiddleware) {
        argv = (0, _middleware.applyMiddleware)(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").getMiddleware(), false);
      }

      return argv;
    }
  }, {
    key: kReset,
    value: function value() {
      var _this17 = this;

      var aliases = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      __classPrivateFieldSet(this, _YargsInstance_options, __classPrivateFieldGet(this, _YargsInstance_options, "f") || {}, "f");

      var tmpOptions = {};
      tmpOptions.local = __classPrivateFieldGet(this, _YargsInstance_options, "f").local || [];
      tmpOptions.configObjects = __classPrivateFieldGet(this, _YargsInstance_options, "f").configObjects || [];
      var localLookup = {};
      tmpOptions.local.forEach(function (l) {
        localLookup[l] = true;
        (aliases[l] || []).forEach(function (a) {
          localLookup[a] = true;
        });
      });
      Object.assign(__classPrivateFieldGet(this, _YargsInstance_preservedGroups, "f"), Object.keys(__classPrivateFieldGet(this, _YargsInstance_groups, "f")).reduce(function (acc, groupName) {
        var keys = __classPrivateFieldGet(_this17, _YargsInstance_groups, "f")[groupName].filter(function (key) {
          return !(key in localLookup);
        });

        if (keys.length > 0) {
          acc[groupName] = keys;
        }

        return acc;
      }, {}));

      __classPrivateFieldSet(this, _YargsInstance_groups, {}, "f");

      var arrayOptions = ['array', 'boolean', 'string', 'skipValidation', 'count', 'normalize', 'number', 'hiddenOptions'];
      var objectOptions = ['narg', 'key', 'alias', 'default', 'defaultDescription', 'config', 'choices', 'demandedOptions', 'demandedCommands', 'deprecatedOptions'];
      arrayOptions.forEach(function (k) {
        tmpOptions[k] = (__classPrivateFieldGet(_this17, _YargsInstance_options, "f")[k] || []).filter(function (k) {
          return !localLookup[k];
        });
      });
      objectOptions.forEach(function (k) {
        tmpOptions[k] = (0, _objFilter.objFilter)(__classPrivateFieldGet(_this17, _YargsInstance_options, "f")[k], function (k) {
          return !localLookup[k];
        });
      });
      tmpOptions.envPrefix = __classPrivateFieldGet(this, _YargsInstance_options, "f").envPrefix;

      __classPrivateFieldSet(this, _YargsInstance_options, tmpOptions, "f");

      __classPrivateFieldSet(this, _YargsInstance_usage, __classPrivateFieldGet(this, _YargsInstance_usage, "f") ? __classPrivateFieldGet(this, _YargsInstance_usage, "f").reset(localLookup) : (0, _usage.usage)(this, __classPrivateFieldGet(this, _YargsInstance_shim, "f")), "f");

      __classPrivateFieldSet(this, _YargsInstance_validation, __classPrivateFieldGet(this, _YargsInstance_validation, "f") ? __classPrivateFieldGet(this, _YargsInstance_validation, "f").reset(localLookup) : (0, _validation.validation)(this, __classPrivateFieldGet(this, _YargsInstance_usage, "f"), __classPrivateFieldGet(this, _YargsInstance_shim, "f")), "f");

      __classPrivateFieldSet(this, _YargsInstance_command, __classPrivateFieldGet(this, _YargsInstance_command, "f") ? __classPrivateFieldGet(this, _YargsInstance_command, "f").reset() : (0, _command.command)(__classPrivateFieldGet(this, _YargsInstance_usage, "f"), __classPrivateFieldGet(this, _YargsInstance_validation, "f"), __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f"), __classPrivateFieldGet(this, _YargsInstance_shim, "f")), "f");

      if (!__classPrivateFieldGet(this, _YargsInstance_completion, "f")) __classPrivateFieldSet(this, _YargsInstance_completion, (0, _completion.completion)(this, __classPrivateFieldGet(this, _YargsInstance_usage, "f"), __classPrivateFieldGet(this, _YargsInstance_command, "f"), __classPrivateFieldGet(this, _YargsInstance_shim, "f")), "f");

      __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").reset();

      __classPrivateFieldSet(this, _YargsInstance_completionCommand, null, "f");

      __classPrivateFieldSet(this, _YargsInstance_output, '', "f");

      __classPrivateFieldSet(this, _YargsInstance_exitError, null, "f");

      __classPrivateFieldSet(this, _YargsInstance_hasOutput, false, "f");

      this.parsed = false;
      return this;
    }
  }, {
    key: kRebase,
    value: function value(base, dir) {
      return __classPrivateFieldGet(this, _YargsInstance_shim, "f").path.relative(base, dir);
    }
  }, {
    key: kRunYargsParserAndExecuteCommands,
    value: function value(args, shortCircuit, calledFromCommand) {
      var _this18 = this;

      var commandIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      var helpOnly = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
      var skipValidation = !!calledFromCommand || helpOnly;
      args = args || __classPrivateFieldGet(this, _YargsInstance_processArgs, "f");
      __classPrivateFieldGet(this, _YargsInstance_options, "f").__ = __classPrivateFieldGet(this, _YargsInstance_shim, "f").y18n.__;
      __classPrivateFieldGet(this, _YargsInstance_options, "f").configuration = this[kGetParserConfiguration]();
      var populateDoubleDash = !!__classPrivateFieldGet(this, _YargsInstance_options, "f").configuration['populate--'];
      var config = Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, "f").configuration, {
        'populate--': true
      });

      var parsed = __classPrivateFieldGet(this, _YargsInstance_shim, "f").Parser.detailed(args, Object.assign({}, __classPrivateFieldGet(this, _YargsInstance_options, "f"), {
        configuration: _objectSpread({
          'parse-positional-numbers': false
        }, config)
      }));

      var argv = Object.assign(parsed.argv, __classPrivateFieldGet(this, _YargsInstance_parseContext, "f"));
      var argvPromise = undefined;
      var aliases = parsed.aliases;
      var helpOptSet = false;
      var versionOptSet = false;
      Object.keys(argv).forEach(function (key) {
        if (key === __classPrivateFieldGet(_this18, _YargsInstance_helpOpt, "f") && argv[key]) {
          helpOptSet = true;
        } else if (key === __classPrivateFieldGet(_this18, _YargsInstance_versionOpt, "f") && argv[key]) {
          versionOptSet = true;
        }
      });
      argv.$0 = this.$0;
      this.parsed = parsed;

      if (commandIndex === 0) {
        __classPrivateFieldGet(this, _YargsInstance_usage, "f").clearCachedHelpMessage();
      }

      try {
        this[kGuessLocale]();

        if (shortCircuit) {
          return this[kPostProcess](argv, populateDoubleDash, !!calledFromCommand, false);
        }

        if (__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f")) {
          var helpCmds = [__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f")].concat(aliases[__classPrivateFieldGet(this, _YargsInstance_helpOpt, "f")] || []).filter(function (k) {
            return k.length > 1;
          });

          if (helpCmds.includes('' + argv._[argv._.length - 1])) {
            argv._.pop();

            helpOptSet = true;
          }
        }

        __classPrivateFieldSet(this, _YargsInstance_isGlobalContext, false, "f");

        var handlerKeys = __classPrivateFieldGet(this, _YargsInstance_command, "f").getCommands();

        var requestCompletions = __classPrivateFieldGet(this, _YargsInstance_completion, "f").completionKey in argv;
        var skipRecommendation = helpOptSet || requestCompletions || helpOnly;

        if (argv._.length) {
          if (handlerKeys.length) {
            var firstUnknownCommand;

            for (var i = commandIndex || 0, cmd; argv._[i] !== undefined; i++) {
              cmd = String(argv._[i]);

              if (handlerKeys.includes(cmd) && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, "f")) {
                var innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, "f").runCommand(cmd, this, parsed, i + 1, helpOnly, helpOptSet || versionOptSet || helpOnly);

                return this[kPostProcess](innerArgv, populateDoubleDash, !!calledFromCommand, false);
              } else if (!firstUnknownCommand && cmd !== __classPrivateFieldGet(this, _YargsInstance_completionCommand, "f")) {
                firstUnknownCommand = cmd;
                break;
              }
            }

            if (!__classPrivateFieldGet(this, _YargsInstance_command, "f").hasDefaultCommand() && __classPrivateFieldGet(this, _YargsInstance_recommendCommands, "f") && firstUnknownCommand && !skipRecommendation) {
              __classPrivateFieldGet(this, _YargsInstance_validation, "f").recommendCommands(firstUnknownCommand, handlerKeys);
            }
          }

          if (__classPrivateFieldGet(this, _YargsInstance_completionCommand, "f") && argv._.includes(__classPrivateFieldGet(this, _YargsInstance_completionCommand, "f")) && !requestCompletions) {
            if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, "f")) (0, _setBlocking["default"])(true);
            this.showCompletionScript();
            this.exit(0);
          }
        }

        if (__classPrivateFieldGet(this, _YargsInstance_command, "f").hasDefaultCommand() && !skipRecommendation) {
          var _innerArgv = __classPrivateFieldGet(this, _YargsInstance_command, "f").runCommand(null, this, parsed, 0, helpOnly, helpOptSet || versionOptSet || helpOnly);

          return this[kPostProcess](_innerArgv, populateDoubleDash, !!calledFromCommand, false);
        }

        if (requestCompletions) {
          if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, "f")) (0, _setBlocking["default"])(true);
          args = [].concat(args);
          var completionArgs = args.slice(args.indexOf("--".concat(__classPrivateFieldGet(this, _YargsInstance_completion, "f").completionKey)) + 1);

          __classPrivateFieldGet(this, _YargsInstance_completion, "f").getCompletion(completionArgs, function (err, completions) {
            if (err) throw new _yerror.YError(err.message);
            (completions || []).forEach(function (completion) {
              __classPrivateFieldGet(_this18, _YargsInstance_logger, "f").log(completion);
            });

            _this18.exit(0);
          });

          return this[kPostProcess](argv, !populateDoubleDash, !!calledFromCommand, false);
        }

        if (!__classPrivateFieldGet(this, _YargsInstance_hasOutput, "f")) {
          if (helpOptSet) {
            if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, "f")) (0, _setBlocking["default"])(true);
            skipValidation = true;
            this.showHelp('log');
            this.exit(0);
          } else if (versionOptSet) {
            if (__classPrivateFieldGet(this, _YargsInstance_exitProcess, "f")) (0, _setBlocking["default"])(true);
            skipValidation = true;

            __classPrivateFieldGet(this, _YargsInstance_usage, "f").showVersion('log');

            this.exit(0);
          }
        }

        if (!skipValidation && __classPrivateFieldGet(this, _YargsInstance_options, "f").skipValidation.length > 0) {
          skipValidation = Object.keys(argv).some(function (key) {
            return __classPrivateFieldGet(_this18, _YargsInstance_options, "f").skipValidation.indexOf(key) >= 0 && argv[key] === true;
          });
        }

        if (!skipValidation) {
          if (parsed.error) throw new _yerror.YError(parsed.error.message);

          if (!requestCompletions) {
            var validation = this[kRunValidation](aliases, {}, parsed.error);

            if (!calledFromCommand) {
              argvPromise = (0, _middleware.applyMiddleware)(argv, this, __classPrivateFieldGet(this, _YargsInstance_globalMiddleware, "f").getMiddleware(), true);
            }

            argvPromise = this[kValidateAsync](validation, argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv);

            if ((0, _isPromise.isPromise)(argvPromise) && !calledFromCommand) {
              argvPromise = argvPromise.then(function () {
                return (0, _middleware.applyMiddleware)(argv, _this18, __classPrivateFieldGet(_this18, _YargsInstance_globalMiddleware, "f").getMiddleware(), false);
              });
            }
          }
        }
      } catch (err) {
        if (err instanceof _yerror.YError) __classPrivateFieldGet(this, _YargsInstance_usage, "f").fail(err.message, err);else throw err;
      }

      return this[kPostProcess](argvPromise !== null && argvPromise !== void 0 ? argvPromise : argv, populateDoubleDash, !!calledFromCommand, true);
    }
  }, {
    key: kRunValidation,
    value: function value(aliases, positionalMap, parseErrors, isDefaultCommand) {
      var _this19 = this;

      var demandedOptions = _objectSpread({}, this.getDemandedOptions());

      return function (argv) {
        if (parseErrors) throw new _yerror.YError(parseErrors.message);

        __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").nonOptionCount(argv);

        __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").requiredArguments(argv, demandedOptions);

        var failedStrictCommands = false;

        if (__classPrivateFieldGet(_this19, _YargsInstance_strictCommands, "f")) {
          failedStrictCommands = __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").unknownCommands(argv);
        }

        if (__classPrivateFieldGet(_this19, _YargsInstance_strict, "f") && !failedStrictCommands) {
          __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").unknownArguments(argv, aliases, positionalMap, !!isDefaultCommand);
        } else if (__classPrivateFieldGet(_this19, _YargsInstance_strictOptions, "f")) {
          __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").unknownArguments(argv, aliases, {}, false, false);
        }

        __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").limitedChoices(argv);

        __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").implications(argv);

        __classPrivateFieldGet(_this19, _YargsInstance_validation, "f").conflicting(argv);
      };
    }
  }, {
    key: kSetHasOutput,
    value: function value() {
      __classPrivateFieldSet(this, _YargsInstance_hasOutput, true, "f");
    }
  }, {
    key: kTrackManuallySetKeys,
    value: function value(keys) {
      if (typeof keys === 'string') {
        __classPrivateFieldGet(this, _YargsInstance_options, "f").key[keys] = true;
      } else {
        var _iteratorNormalCompletion4 = true;
        var _didIteratorError4 = false;
        var _iteratorError4 = undefined;

        try {
          for (var _iterator4 = keys[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
            var k = _step4.value;
            __classPrivateFieldGet(this, _YargsInstance_options, "f").key[k] = true;
          }
        } catch (err) {
          _didIteratorError4 = true;
          _iteratorError4 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion4 && _iterator4["return"] != null) {
              _iterator4["return"]();
            }
          } finally {
            if (_didIteratorError4) {
              throw _iteratorError4;
            }
          }
        }
      }
    }
  }]);

  return YargsInstance;
}();

exports.YargsInstance = YargsInstance;

function isYargsInstance(y) {
  return !!y && typeof y.getInternalMethods === 'function';
}