"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = _default;

function deepClone(value, cache) {
  if (value !== null) {
    if (cache.has(value)) return cache.get(value);
    var cloned;

    if (Array.isArray(value)) {
      cloned = new Array(value.length);

      for (var i = 0; i < value.length; i++) {
        cloned[i] = _typeof(value[i]) !== "object" ? value[i] : deepClone(value[i], cache);
      }
    } else {
      cloned = {};
      var keys = Object.keys(value);

      for (var _i = 0; _i < keys.length; _i++) {
        var key = keys[_i];
        cloned[key] = _typeof(value[key]) !== "object" ? value[key] : deepClone(value[key], cache);
      }
    }

    cache.set(value, cloned);
    return cloned;
  }

  return value;
}

function _default(value) {
  if (_typeof(value) !== "object") return value;
  return deepClone(value, new Map());
}

0 && 0;