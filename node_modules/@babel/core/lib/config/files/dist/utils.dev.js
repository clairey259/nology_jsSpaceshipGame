"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeStaticFileCache = makeStaticFileCache;

var _caching = require("../caching");

var fs = require("../../gensync-utils/fs");

function _fs2() {
  var data = require("fs");

  _fs2 = function _fs2() {
    return data;
  };

  return data;
}

function makeStaticFileCache(fn) {
  return (0, _caching.makeStrongCache)(
  /*#__PURE__*/
  regeneratorRuntime.mark(function _callee(filepath, cache) {
    var cached;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            cached = cache.invalidate(function () {
              return fileMtime(filepath);
            });

            if (!(cached === null)) {
              _context.next = 3;
              break;
            }

            return _context.abrupt("return", null);

          case 3:
            _context.t0 = fn;
            _context.t1 = filepath;
            return _context.delegateYield(fs.readFile(filepath, "utf8"), "t2", 6);

          case 6:
            _context.t3 = _context.t2;
            return _context.abrupt("return", (0, _context.t0)(_context.t1, _context.t3));

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
}

function fileMtime(filepath) {
  if (!_fs2().existsSync(filepath)) return null;

  try {
    return +_fs2().statSync(filepath).mtime;
  } catch (e) {
    if (e.code !== "ENOENT" && e.code !== "ENOTDIR") throw e;
  }

  return null;
}

0 && 0;