"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createConfigItem = createConfigItem;
exports.createConfigItemSync = exports.createConfigItemAsync = void 0;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _full["default"];
  }
});
exports.loadPartialConfigSync = exports.loadPartialConfigAsync = exports.loadPartialConfig = exports.loadOptionsSync = exports.loadOptionsAsync = exports.loadOptions = void 0;

function _gensync() {
  var data = require("gensync");

  _gensync = function _gensync() {
    return data;
  };

  return data;
}

var _full = require("./full");

var _partial = require("./partial");

var _item = require("./item");

var loadOptionsRunner = _gensync()(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee(opts) {
  var _config$options, config;

  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield((0, _full["default"])(opts), "t0", 1);

        case 1:
          config = _context.t0;
          return _context.abrupt("return", (_config$options = config == null ? void 0 : config.options) != null ? _config$options : null);

        case 3:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}));

var createConfigItemRunner = _gensync()(_item.createConfigItem);

var maybeErrback = function maybeErrback(runner) {
  return function (argOrCallback, maybeCallback) {
    var arg;
    var callback;

    if (maybeCallback === undefined && typeof argOrCallback === "function") {
      callback = argOrCallback;
      arg = undefined;
    } else {
      callback = maybeCallback;
      arg = argOrCallback;
    }

    return callback ? runner.errback(arg, callback) : runner.sync(arg);
  };
};

var loadPartialConfig = maybeErrback(_partial.loadPartialConfig);
exports.loadPartialConfig = loadPartialConfig;
var loadPartialConfigSync = _partial.loadPartialConfig.sync;
exports.loadPartialConfigSync = loadPartialConfigSync;
var loadPartialConfigAsync = _partial.loadPartialConfig.async;
exports.loadPartialConfigAsync = loadPartialConfigAsync;
var loadOptions = maybeErrback(loadOptionsRunner);
exports.loadOptions = loadOptions;
var loadOptionsSync = loadOptionsRunner.sync;
exports.loadOptionsSync = loadOptionsSync;
var loadOptionsAsync = loadOptionsRunner.async;
exports.loadOptionsAsync = loadOptionsAsync;
var createConfigItemSync = createConfigItemRunner.sync;
exports.createConfigItemSync = createConfigItemSync;
var createConfigItemAsync = createConfigItemRunner.async;
exports.createConfigItemAsync = createConfigItemAsync;

function createConfigItem(target, options, callback) {
  if (callback !== undefined) {
    return createConfigItemRunner.errback(target, options, callback);
  } else if (typeof options === "function") {
    return createConfigItemRunner.errback(target, undefined, callback);
  } else {
    return createConfigItemRunner.sync(target, options);
  }
}

0 && 0;