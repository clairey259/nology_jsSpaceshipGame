"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.once = once;

var _async = require("./async");

function once(fn) {
  var result;
  var resultP;
  return (
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee() {
      var resolve, reject;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (!result) {
                _context.next = 2;
                break;
              }

              return _context.abrupt("return", result);

            case 2:
              return _context.delegateYield((0, _async.isAsync)(), "t0", 3);

            case 3:
              if (_context.t0) {
                _context.next = 6;
                break;
              }

              return _context.delegateYield(fn(), "t1", 5);

            case 5:
              return _context.abrupt("return", result = _context.t1);

            case 6:
              if (!resultP) {
                _context.next = 9;
                break;
              }

              return _context.delegateYield((0, _async.waitFor)(resultP), "t2", 8);

            case 8:
              return _context.abrupt("return", _context.t2);

            case 9:
              resultP = new Promise(function (res, rej) {
                resolve = res;
                reject = rej;
              });
              _context.prev = 10;
              return _context.delegateYield(fn(), "t3", 12);

            case 12:
              result = _context.t3;
              resultP = null;
              resolve(result);
              return _context.abrupt("return", result);

            case 18:
              _context.prev = 18;
              _context.t4 = _context["catch"](10);
              reject(_context.t4);
              throw _context.t4;

            case 22:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, null, [[10, 18]]);
    })
  );
}

0 && 0;