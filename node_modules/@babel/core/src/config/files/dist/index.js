"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
exports.__esModule = true;
exports.resolvePreset = exports.resolvePlugin = void 0;
// Kind of gross, but essentially asserting that the exports of this module are the same as the
// exports of index-browser, since this file may be replaced at bundle time with index-browser.
({});
var package_1 = require("./package");
__createBinding(exports, package_1, "findPackageData");
var configuration_1 = require("./configuration");
__createBinding(exports, configuration_1, "findConfigUpwards");
__createBinding(exports, configuration_1, "findRelativeConfig");
__createBinding(exports, configuration_1, "findRootConfig");
__createBinding(exports, configuration_1, "loadConfig");
__createBinding(exports, configuration_1, "resolveShowConfigPath");
__createBinding(exports, configuration_1, "ROOT_CONFIG_FILENAMES");
var plugins_1 = require("./plugins");
__createBinding(exports, plugins_1, "loadPlugin");
__createBinding(exports, plugins_1, "loadPreset");
var gensync_1 = require("gensync");
var plugins = require("./plugins");
exports.resolvePlugin = gensync_1["default"](plugins.resolvePlugin).sync;
exports.resolvePreset = gensync_1["default"](plugins.resolvePreset).sync;
