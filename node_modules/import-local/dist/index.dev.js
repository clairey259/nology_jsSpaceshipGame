'use strict';

var path = require('path');

var _require = require('url'),
    fileURLToPath = _require.fileURLToPath;

var resolveCwd = require('resolve-cwd');

var pkgDir = require('pkg-dir');

module.exports = function (filename) {
  var normalizedFilename = filename.startsWith('file://') ? fileURLToPath(filename) : filename;
  var globalDir = pkgDir.sync(path.dirname(normalizedFilename));
  var relativePath = path.relative(globalDir, normalizedFilename);

  var pkg = require(path.join(globalDir, 'package.json'));

  var localFile = resolveCwd.silent(path.join(pkg.name, relativePath));
  var localNodeModules = path.join(process.cwd(), 'node_modules');
  var filenameInLocalNodeModules = !path.relative(localNodeModules, normalizedFilename).startsWith('..') && // On Windows, if `localNodeModules` and `normalizedFilename` are on different partitions, `path.relative()` returns the value of `normalizedFilename`, resulting in `filenameInLocalNodeModules` incorrectly becoming `true`.
  path.parse(localNodeModules).root === path.parse(normalizedFilename).root; // Use `path.relative()` to detect local package installation,
  // because __filename's case is inconsistent on Windows
  // Can use `===` when targeting Node.js 8
  // See https://github.com/nodejs/node/issues/6624

  return !filenameInLocalNodeModules && localFile && path.relative(localFile, normalizedFilename) !== '' && require(localFile);
};