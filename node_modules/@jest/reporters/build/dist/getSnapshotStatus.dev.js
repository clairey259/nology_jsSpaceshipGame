'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = getSnapshotStatus;

function _chalk() {
  var data = _interopRequireDefault(require('chalk'));

  _chalk = function _chalk() {
    return data;
  };

  return data;
}

function _jestUtil() {
  var data = require('jest-util');

  _jestUtil = function _jestUtil() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ARROW = " \u203A ";
var DOT = " \u2022 ";

var FAIL_COLOR = _chalk()["default"].bold.red;

var SNAPSHOT_ADDED = _chalk()["default"].bold.green;

var SNAPSHOT_UPDATED = _chalk()["default"].bold.green;

var SNAPSHOT_OUTDATED = _chalk()["default"].bold.yellow;

function getSnapshotStatus(snapshot, afterUpdate) {
  var statuses = [];

  if (snapshot.added) {
    statuses.push(SNAPSHOT_ADDED("".concat(ARROW + (0, _jestUtil().pluralize)('snapshot', snapshot.added), " written.")));
  }

  if (snapshot.updated) {
    statuses.push(SNAPSHOT_UPDATED("".concat(ARROW + (0, _jestUtil().pluralize)('snapshot', snapshot.updated), " updated.")));
  }

  if (snapshot.unmatched) {
    statuses.push(FAIL_COLOR("".concat(ARROW + (0, _jestUtil().pluralize)('snapshot', snapshot.unmatched), " failed.")));
  }

  if (snapshot.unchecked) {
    if (afterUpdate) {
      statuses.push(SNAPSHOT_UPDATED("".concat(ARROW + (0, _jestUtil().pluralize)('snapshot', snapshot.unchecked), " removed.")));
    } else {
      statuses.push("".concat(SNAPSHOT_OUTDATED("".concat(ARROW + (0, _jestUtil().pluralize)('snapshot', snapshot.unchecked), " obsolete")), "."));
    }

    snapshot.uncheckedKeys.forEach(function (key) {
      statuses.push("  ".concat(DOT).concat(key));
    });
  }

  if (snapshot.fileDeleted) {
    statuses.push(SNAPSHOT_UPDATED("".concat(ARROW, "snapshot file removed.")));
  }

  return statuses;
}