'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.makeInvalidTransformerError = exports.makeInvalidSyncTransformerError = exports.makeInvalidSourceMapWarning = exports.makeInvalidReturnValueError = void 0;

function _chalk() {
  var data = _interopRequireDefault(require('chalk'));

  _chalk = function _chalk() {
    return data;
  };

  return data;
}

function _slash() {
  var data = _interopRequireDefault(require('slash'));

  _slash = function _slash() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var BULLET = "\u25CF ";
var DOCUMENTATION_NOTE = "  ".concat(_chalk()["default"].bold('Code Transformation Documentation:'), "\n  https://jestjs.io/docs/code-transformation\n");
var UPGRADE_NOTE = "  ".concat(_chalk()["default"].bold('This error may be caused by a breaking change in Jest 28:'), "\n  https://jestjs.io/docs/upgrading-to-jest28#transformer\n");

var makeInvalidReturnValueError = function makeInvalidReturnValueError(transformPath) {
  return _chalk()["default"].red([_chalk()["default"].bold("".concat(BULLET, "Invalid return value:")), '  `process()` or/and `processAsync()` method of code transformer found at ', "  \"".concat((0, _slash()["default"])(transformPath), "\" "), '  should return an object or a Promise resolving to an object. The object ', '  must have `code` property with a string of processed code.', ''].join('\n') + UPGRADE_NOTE + DOCUMENTATION_NOTE);
};

exports.makeInvalidReturnValueError = makeInvalidReturnValueError;

var makeInvalidSourceMapWarning = function makeInvalidSourceMapWarning(filename, transformPath) {
  return _chalk()["default"].yellow([_chalk()["default"].bold("".concat(BULLET, "Invalid source map:")), "  The source map for \"".concat((0, _slash()["default"])(filename), "\" returned by \"").concat((0, _slash()["default"])(transformPath), "\" is invalid."), '  Proceeding without source mapping for that file.'].join('\n'));
};

exports.makeInvalidSourceMapWarning = makeInvalidSourceMapWarning;

var makeInvalidSyncTransformerError = function makeInvalidSyncTransformerError(transformPath) {
  return _chalk()["default"].red([_chalk()["default"].bold("".concat(BULLET, "Invalid synchronous transformer module:")), "  \"".concat((0, _slash()["default"])(transformPath), "\" specified in the \"transform\" object of Jest configuration"), '  must export a `process` function.', ''].join('\n') + DOCUMENTATION_NOTE);
};

exports.makeInvalidSyncTransformerError = makeInvalidSyncTransformerError;

var makeInvalidTransformerError = function makeInvalidTransformerError(transformPath) {
  return _chalk()["default"].red([_chalk()["default"].bold("".concat(BULLET, "Invalid transformer module:")), "  \"".concat((0, _slash()["default"])(transformPath), "\" specified in the \"transform\" object of Jest configuration"), '  must export a `process` or `processAsync` or `createTransformer` function.', ''].join('\n') + DOCUMENTATION_NOTE);
};

exports.makeInvalidTransformerError = makeInvalidTransformerError;