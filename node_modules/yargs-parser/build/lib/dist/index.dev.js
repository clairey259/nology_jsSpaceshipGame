"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _util = require("util");

var _path = require("path");

var _stringUtils = require("./string-utils.js");

var _yargsParser = require("./yargs-parser.js");

var _fs = require("fs");

/**
 * @fileoverview Main entrypoint for libraries using yargs-parser in Node.js
 * CJS and ESM environments.
 *
 * @license
 * Copyright (c) 2016, Contributors
 * SPDX-License-Identifier: ISC
 */
var _a, _b, _c;

// See https://github.com/yargs/yargs-parser#supported-nodejs-versions for our
// version support policy. The YARGS_MIN_NODE_VERSION is used for testing only.
var minNodeVersion = process && process.env && process.env.YARGS_MIN_NODE_VERSION ? Number(process.env.YARGS_MIN_NODE_VERSION) : 12;
var nodeVersion = (_b = (_a = process === null || process === void 0 ? void 0 : process.versions) === null || _a === void 0 ? void 0 : _a.node) !== null && _b !== void 0 ? _b : (_c = process === null || process === void 0 ? void 0 : process.version) === null || _c === void 0 ? void 0 : _c.slice(1);

if (nodeVersion) {
  var major = Number(nodeVersion.match(/^([^.]+)/)[1]);

  if (major < minNodeVersion) {
    throw Error("yargs parser supports a minimum Node.js version of ".concat(minNodeVersion, ". Read our version support policy: https://github.com/yargs/yargs-parser#supported-nodejs-versions"));
  }
} // Creates a yargs-parser instance using Node.js standard libraries:


var _env = process ? process.env : {};

var parser = new _yargsParser.YargsParser({
  cwd: process.cwd,
  env: function env() {
    return _env;
  },
  format: _util.format,
  normalize: _path.normalize,
  resolve: _path.resolve,
  // TODO: figure  out a  way to combine ESM and CJS coverage, such  that
  // we can exercise all the lines below:
  require: function (_require) {
    function require(_x) {
      return _require.apply(this, arguments);
    }

    require.toString = function () {
      return _require.toString();
    };

    return require;
  }(function (path) {
    if (typeof require !== 'undefined') {
      return require(path);
    } else if (path.match(/\.json$/)) {
      // Addresses: https://github.com/yargs/yargs/issues/2040
      return JSON.parse((0, _fs.readFileSync)(path, 'utf8'));
    } else {
      throw Error('only .json config files are supported in ESM');
    }
  })
});

var yargsParser = function Parser(args, opts) {
  var result = parser.parse(args.slice(), opts);
  return result.argv;
};

yargsParser.detailed = function (args, opts) {
  return parser.parse(args.slice(), opts);
};

yargsParser.camelCase = _stringUtils.camelCase;
yargsParser.decamelize = _stringUtils.decamelize;
yargsParser.looksLikeNumber = _stringUtils.looksLikeNumber;
var _default = yargsParser;
exports["default"] = _default;