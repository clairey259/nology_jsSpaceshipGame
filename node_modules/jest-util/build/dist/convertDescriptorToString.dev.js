'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = convertDescriptorToString;
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

function convertDescriptorToString(descriptor) {
  switch (_typeof(descriptor)) {
    case 'function':
      if (descriptor.name) {
        return descriptor.name;
      }

      break;

    case 'number':
    case 'undefined':
      return "".concat(descriptor);

    case 'string':
      return descriptor;
  }

  throw new Error("Invalid first argument, ".concat(descriptor, ". It must be a named class, named function, number, or string."));
}