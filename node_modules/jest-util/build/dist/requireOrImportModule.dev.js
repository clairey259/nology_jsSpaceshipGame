'use strict';

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports["default"] = requireOrImportModule;

function _path() {
  var data = require('path');

  _path = function _path() {
    return data;
  };

  return data;
}

function _url() {
  var data = require('url');

  _url = function _url() {
    return data;
  };

  return data;
}

var _interopRequireDefault = _interopRequireDefault2(require('./interopRequireDefault'));

function _interopRequireDefault2(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


function requireOrImportModule(filePath) {
  var applyInteropRequireDefault,
      requiredModule,
      moduleUrl,
      importedModule,
      _args = arguments;
  return regeneratorRuntime.async(function requireOrImportModule$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          applyInteropRequireDefault = _args.length > 1 && _args[1] !== undefined ? _args[1] : true;

          if (!(!(0, _path().isAbsolute)(filePath) && filePath[0] === '.')) {
            _context.next = 3;
            break;
          }

          throw new Error("Jest: requireOrImportModule path must be absolute, was \"".concat(filePath, "\""));

        case 3:
          _context.prev = 3;
          requiredModule = require(filePath);

          if (applyInteropRequireDefault) {
            _context.next = 7;
            break;
          }

          return _context.abrupt("return", requiredModule);

        case 7:
          return _context.abrupt("return", (0, _interopRequireDefault["default"])(requiredModule)["default"]);

        case 10:
          _context.prev = 10;
          _context.t0 = _context["catch"](3);

          if (!(_context.t0.code === 'ERR_REQUIRE_ESM')) {
            _context.next = 32;
            break;
          }

          _context.prev = 13;
          moduleUrl = (0, _url().pathToFileURL)(filePath); // node `import()` supports URL, but TypeScript doesn't know that

          _context.next = 17;
          return regeneratorRuntime.awrap(Promise.resolve().then(function () {
            return _interopRequireWildcard(require("".concat(moduleUrl.href)));
          }));

        case 17:
          importedModule = _context.sent;

          if (applyInteropRequireDefault) {
            _context.next = 20;
            break;
          }

          return _context.abrupt("return", importedModule);

        case 20:
          if (importedModule["default"]) {
            _context.next = 22;
            break;
          }

          throw new Error("Jest: Failed to load ESM at ".concat(filePath, " - did you use a default export?"));

        case 22:
          return _context.abrupt("return", importedModule["default"]);

        case 25:
          _context.prev = 25;
          _context.t1 = _context["catch"](13);

          if (!(_context.t1.message === 'Not supported')) {
            _context.next = 29;
            break;
          }

          throw new Error("Jest: Your version of Node does not support dynamic import - please enable it or use a .cjs file extension for file ".concat(filePath));

        case 29:
          throw _context.t1;

        case 30:
          _context.next = 33;
          break;

        case 32:
          throw _context.t0;

        case 33:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[3, 10], [13, 25]]);
}